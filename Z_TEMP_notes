https://reactive.so/post/42-a-comprehensive-guide-to-so_long

Keyboard key codes :
left_arrow :  123
right_arrow : 124
down_arrow :  125
up_arrow :    126
a:  0
d:  2
s:  1
w: 13
q: 12
z:  6
ESC:   53
SPACE: 49

Events implemented in Minilibx-MacOS-OpenGL-version
enum {
	ON_KEYDOWN = 2, // key press
	ON_KEYUP = 3,   // key release
	ON_MOUSEDOWN = 4, // button press
	ON_MOUSEUP = 5,   // button release
	ON_MOUSEMOVE = 6, // motion
	ON_EXPOSE = 12,   
	ON_DESTROY = 17
};
// usage:
mlx_hook(vars.win, ON_DESTROY, 0, close, &vars);
int	mlx_hook(t_win_list *win, int x_event, int x_mask, int (*funct)(),void *param);
void mlx_hook(mlx_win_list_t *windw, int x_event, int x_mask, int (*f)(), void *param)

An Expose event is generated when a window becomes visible or a previously invisible part of a window becomes visible.

// X11 event codes
https://harm-smits.github.io/42docs/libs/minilibx/events.html#x11-interface

https://tronche.com/gui/x/xlib/events/

Some version of mlbx doesnâ€™t implement x_mask and whatever the value there will be no mask (leave 0 as default value).



 - - - -

Hooking event 	Code 	Event function prototype
ON_KEYDOWN 		2 		int (*f)(int keycode, void *param)
ON_KEYUP* 		3 		int (*f)(int keycode, void *param)
ON_MOUSEDOWN* 	4 		int (*f)(int button, int x, int y, void *param)
ON_MOUSEUP 		5 		int (*f)(int button, int x, int y, void *param)
ON_MOUSEMOVE 	6 		int (*f)(int x, int y, void *param)
ON_EXPOSE* 		12 		int (*f)(void *param)
ON_DESTROY 		17 		int (*f)(void *param)

 - - - -

reset mlx :
rm -rf include/mlx && cp -r untracked/minilibx_opengl_20191021/ include/mlx

